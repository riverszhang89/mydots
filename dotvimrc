syntax on
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=1

let _curfile = expand("%:t")
if _curfile =~ "Makefile" || _curfile =~ "makefile" || _curfile =~ ".*\.mk"
set noexpandtab
else
set expandtab
set tabstop=4
set shiftwidth=4
endif

set autoindent
set ruler
set number
set hlsearch
set backspace=indent,eol,start
set visualbell
set vb t_vb=
set nocompatible
set number
filetype on
set history=1000
syntax on
set autoindent
set cindent
set autoread
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set showmatch
set guioptions-=T
set vb t_vb=
set ruler
set incsearch
set nobackup
set noswapfile
set fileencodings=utf-8
set background=dark
set laststatus=2
"colorscheme solarized
colorscheme desert 
hi TabLineFill ctermfg=White ctermbg=Black
hi TabLineSel ctermfg=Red ctermbg=Black
hi TabLine ctermfg=Black ctermbg=White
syntax keyword airline_tabmod_unsel a
set statusline=%f
set statusline+=%#error#
set statusline+=%y
set statusline+=%*
set statusline+=%m%r%h\ %w\ \ PWD:\ %r%{getcwd()}%h
set statusline+=%=
set statusline+=%c,
set statusline+=%l/%L
set grepprg=git\ grep\ -n
nnoremap K :grep! "<C-R><C-W>\b"<CR>:cw<CR>
nnoremap <C-Up> :cp<CR>
nnoremap <C-Down> :cn<CR>

nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>
nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . tabpagenr()<CR>

let g:airline#extensions#tabline#enabled = 1

set wildmode=longest,full
set wildmenu
set wildignore=*.o,*~,.git\*,.svn\*

"highlight Normal ctermfg=grey ctermbg=black

" autocmd vimenter * NERDTree
" autocmd vimenter * if !argc() | NERDTree | endif
" autocmd VimEnter * wincmd p
" autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == 'primary') | q | endif

" NERD TREE
map <F12> :call NerdTree()<CR>
function NerdTree()
    execute ":NERDTreeToggle"
endfunction

nnoremap <F6> :call Compilelocum()<CR>
function Compilelocum()
    execute "!locum ~/mbig/builddb/builddb"
endfunction

nnoremap <F5> :call Compilemake()<CR>
function Compilemake()
    execute "!make -j12"
endfunction

nnoremap <C-F5> :call Compilemakeclean()<CR>
function Compilemakeclean()
    execute "!make -j12 clean"
endfunction

map <F8> :call Plink()<CR>
function Plink()
    execute "!plink *.mk"
endfunction

let Tlist_Use_Right_Window = 1
nnoremap <F11> :TlistToggle<CR>

" F5 Auto Compile
map <F10> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'c'
        exec "!cc -g % -o %< -lm -lpthread"
        exec "! ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ -g % -o %< -lm"
        exec "! ./%<"
    elseif &filetype == 'java'
        exec "!javac %"
        exec "!java %<"
    elseif &filetype == 'sh'
        :!./%
    endif
endfunc

" remember position after reopen
if has("autocmd")
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
